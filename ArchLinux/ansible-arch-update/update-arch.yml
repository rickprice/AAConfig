---
- name: Update Arch Linux with AUR (paru), logging, reboots, and cleanup
  hosts: arch_machines,localhost
  become: yes
  vars:
    aur_helper: paru
    log_file: /var/log/ansible-updates.log
  tasks:
    - name: Ensure base-devel, git, and pacman-contrib are installed
      pacman:
        name:
          - base-devel
          - git
          - pacman-contrib
        state: present

    - name: Ensure log file exists with correct permissions
      become: true
      file:
        path: "{{ log_file }}"
        state: touch
        owner: aur_builder
        group: fprice
        mode: '0664'

    - name: Check if paru is installed
      become: false
      command: which {{ aur_helper }}
      register: paru_check
      ignore_errors: true
      changed_when: false

    - name: Install paru if not present
      become: false
      when: paru_check.rc != 0
      block:
        - name: Clone paru from AUR
          git:
            repo: https://aur.archlinux.org/paru.git
            dest: /tmp/paru
            clone: yes
            update: no

        - name: Build and install paru
          shell: makepkg -si --noconfirm
          args:
            chdir: /tmp/paru
            executable: /bin/bash

        - name: Clean up paru build directory
          file:
            path: /tmp/paru
            state: absent

    - name: Get current running kernel version
      shell: uname -r
      register: current_kernel
      changed_when: false

    # - name: Update pacman cache
    #   pacman:
    #     update_cache: yes
    #
    # - name: Upgrade system packages and log
    #   shell: |
    #     echo "== $(date) ==" | tee -a {{ log_file }}
    #     pacman -Syu --noconfirm 2>&1 | tee -a {{ log_file }}
    #   args:
    #     executable: /bin/bash

    - name: Update AUR packages with paru (include devel, skip prompts) and log
      become: true
      become_user: aur_builder
      shell: |
        echo "== AUR Updates (with devel): $(date) ==" >> {{ log_file }}
        {{ aur_helper }} -Syu --devel --noconfirm --skipreview --sudoloop >> {{ log_file }} 2>&1
      args:
        executable: /bin/bash

    - name: Get installed kernel version
      shell: pacman -Q linux | awk '{print $2}'
      register: new_kernel
      changed_when: false

    - name: Reboot if kernel changed
      reboot:
        msg: "Rebooting due to kernel upgrade"
        connect_timeout: 5
        reboot_timeout: 300
        test_command: whoami
      when: current_kernel.stdout not in new_kernel.stdout

    - name: Notify user after reboot
      shell: |
        wall "Ansible: System {{ inventory_hostname }} rebooted and fully updated on $(date)."
      args:
        executable: /bin/bash

    - name: Clean pacman cache (keep 3 versions)
      shell: paccache -r -k3 >> {{ log_file }} 2>&1
      args:
        executable: /bin/bash

    - name: Vacuum journal logs older than 2 weeks
      shell: journalctl --vacuum-time=2weeks >> {{ log_file }} 2>&1
      args:
        executable: /bin/bash

    - name: Run tmpfiles cleanup
      shell: systemd-tmpfiles --clean >> {{ log_file }} 2>&1
      args:
        executable: /bin/bash

